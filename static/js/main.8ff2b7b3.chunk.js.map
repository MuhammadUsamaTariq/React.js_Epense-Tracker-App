{"version":3,"sources":["components/header.js","context/AppReducer.js","context/globalState.js","components/balance.js","components/incomeExpenses.js","components/transaction.js","components/transactionList.js","components/addTransaction.js","App.js","reportWebVitals.js","index.js"],"names":["Header","state","action","type","Transactions","filter","transaction","id","payload","initialState","GlobalConext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","balance","useContext","map","amount","reduce","acc","curr","toFixed","IncomeEpenses","income","expense","className","Math","abs","Transaction","sign","text","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ff2b7b3.chunk.js","sourcesContent":["\r\nimport '../App.css';\r\n\r\nfunction Header() {\r\n\r\n\r\n  return (\r\n   \r\n    <h2>Expense Tracker</h2>\r\n    \r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export default (state , action) =>{\r\n    switch(action.type){\r\n        case 'DELETE_TRANSACTION' :\r\n            return {\r\n                ...state,\r\n                Transactions : state.Transactions.filter(transaction => transaction.id !== action.payload)\r\n            }\r\n            case 'ADD_TRANSACTION' :\r\n                return {\r\n                    ...state,\r\n                    Transactions : [action.payload , ...state.Transactions]\r\n                }\r\n        default:\r\n        return state;\r\n    }\r\n}","import React, { createContext , useReducer } from 'react';\r\n\r\nimport AppReducer from './AppReducer';\r\n\r\nconst initialState = {\r\n    Transactions : [\r\n         \r\n        ]\r\n}\r\n\r\nexport const GlobalConext = createContext(initialState);\r\n\r\nexport const GlobalProvider = ( {children} ) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    function deleteTransaction (id) {\r\n        dispatch({\r\n            type : 'DELETE_TRANSACTION',\r\n            payload : id\r\n        })\r\n    }\r\n\r\n    function addTransaction (transaction) {\r\n        dispatch({\r\n            type : 'ADD_TRANSACTION',\r\n            payload : transaction\r\n        })\r\n    }\r\n\r\n    return(\r\n        <GlobalConext.Provider value={{\r\n            Transactions : state.Transactions,\r\n            deleteTransaction,\r\n            addTransaction\r\n        }}>\r\n            {children}\r\n        </GlobalConext.Provider>\r\n    )\r\n}","import { useContext } from 'react';\r\nimport { GlobalConext } from '../context/globalState';\r\n\r\n\r\nconst Balance = () => {\r\n\r\n    const { Transactions } = useContext(GlobalConext);\r\n\r\n    const amount = Transactions.map(transaction => transaction.amount);\r\n\r\n    const balance = amount.reduce((acc, curr) => (acc += curr), 0).toFixed(2);\r\n\r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1 >${balance}</h1>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Balance;\r\n","import { useContext } from 'react';\r\nimport { GlobalConext } from '../context/globalState';\r\n\r\nconst IncomeEpenses = () => {\r\n\r\n    const { Transactions } = useContext(GlobalConext);\r\n\r\n    const amount = Transactions.map(transaction => transaction.amount);\r\n \r\n    const income = amount.filter(amount => amount>0).reduce((acc, curr)=>(acc +=curr),0).toFixed(2);\r\n\r\n    const expense = amount.filter(amount => amount<0).reduce((acc, curr)=>(acc +=curr),0);\r\n\r\n    return (\r\n        \r\n           <div className=\"inc-exp-container\">\r\n        <div>\r\n          <h4>Income</h4>\r\n          <p  className=\"money plus\">${income}</p>\r\n        </div>\r\n        <div>\r\n          <h4>Expense</h4>\r\n          <p  className=\"money minus\">${Math.abs(expense).toFixed(2)}</p>\r\n        </div>\r\n      </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default IncomeEpenses;","import { useContext } from 'react';\r\nimport { GlobalConext } from '../context/globalState';\r\n\r\nconst Transaction = ({transaction}) => {\r\n    const {deleteTransaction} = useContext(GlobalConext);\r\n     \r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n    return (\r\n        <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n            {transaction.text}  <span>{sign}${Math.abs( transaction.amount )}</span><button onClick={()=>deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Transaction;","import { useContext } from \"react\";\r\n\r\nimport { GlobalConext } from '../context/globalState';\r\nimport Transaction from \"./transaction\";\r\n\r\n\r\n\r\nconst TransactionList = () => {\r\n    const {Transactions} = useContext(GlobalConext);\r\n\r\n    \r\n    return (\r\n        <>\r\n            <h3>History</h3>\r\n            <ul className=\"list\">\r\n                {Transactions.map(transaction => <Transaction key={transaction.id} transaction={transaction} /> )}\r\n                \r\n            </ul></>\r\n    );\r\n}\r\n\r\nexport default TransactionList;","import { useState } from 'react';\r\nimport { useContext } from \"react\";\r\n\r\nimport { GlobalConext } from '../context/globalState';\r\n\r\n\r\nconst AddTransaction = () => {\r\n\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n\r\n    const {addTransaction} = useContext(GlobalConext);\r\n\r\n    const onsubmitHandler = (e) =>{\r\n        e.preventDefault();\r\n\r\n        const newTransaction = \r\n            {\r\n                id : Math.floor(Math.random() * 100000),\r\n                text,\r\n                amount : +amount\r\n            }\r\n        \r\n\r\n        addTransaction(newTransaction);\r\n\r\n        setText('');\r\n\r\n       setAmount('');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Add new transaction</h3>\r\n            <form onSubmit ={onsubmitHandler}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                    <input type=\"text\" value={text} onChange={(e) => { setText(e.target.value) }} placeholder=\"Enter text...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\"\r\n                    >Amount <br />\r\n                    (negative - expense, positive - income)</label >\r\n                    <input type=\"number\" value={amount} onChange={(e) => { setAmount(e.target.value) }} placeholder=\"Enter amount...\" />\r\n                </div>\r\n                <button className=\"btn\">Add transaction</button>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddTransaction;","import React, { useState } from 'react';\n\nimport Header from './components/header';\n\nimport Balance from './components/balance';\nimport IncomeEpenses from './components/incomeExpenses';\nimport TransactionList from './components/transactionList';\nimport AddTransaction from './components/addTransaction';\nimport {GlobalProvider} from './context/globalState';\n\nfunction App() {\n\n  return (\n\n    <div className='container'>\n    <GlobalProvider >\n    \n    <Header />\n\n      <Balance />\n\n      <IncomeEpenses />\n\n      <TransactionList />\n\n      <AddTransaction />\n      \n      \n    </GlobalProvider>\n    </div>\n\n\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}